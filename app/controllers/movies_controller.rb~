class MoviesController < ApplicationController

  def show
    id = params[:id] # retrieve movie ID from URI route
    @movie = Movie.find(id) # look up movie by unique ID
    # will render app/views/movies/show.<extension> by default
  end

  def index

    @all_ratings = Movie.ratings

    # If the params exists then pass them into the session
    if params[:sort_by]
      session[:sort_by] = params[:sort_by]
    end
    if params[:ratings]
      session[:ratings] = params[:ratings]
    end

    # made sure the session sort_by isnt null
    if session[:sort_by] == nil
      @sort_by = ''
    else
      @sort_by = session[:sort_by]
    end

    # if theres a hash in in session ratings the @ratings uses those keys
    if session[:ratings].class.name.include?('Hash')
      @ratings = session[:ratings].keys
    else
      # Otherwise if its not a hash and its nil set @ratings to Movie.ratings, or in 
      # the final case just set @ratings to the session ratings
      if session[:ratings] == nil
        @ratings = @all_ratings
      else
        @ratings = session[:ratings]
      end
    end

    # Change the color of the headings to hilite CSS color if they are selected
    if session[:sort_by] == 'title'
      @title_header = 'hilite'
    elsif session[:sort_by] == 'release_date'
      @release_date_header = 'hilite'
    end

    # filter out the movies that are unchecked by rating
    @movies = Movie.where(:rating => @ratings).order(@sort_by)

    redirect_to movies_path(:sort_by => @sort_by, :ratings => @ratings) unless (params[:sort_by] || params[:ratings])

  end

  def new
    # default: render 'new' template
  end

  def create
    @movie = Movie.create!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully created."
    redirect_to movies_path
  end

  def edit
    @movie = Movie.find params[:id]
  end

  def update
    @movie = Movie.find params[:id]
    @movie.update_attributes!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully updated."
    redirect_to movie_path(@movie)
  end

  def destroy
    @movie = Movie.find(params[:id])
    @movie.destroy
    flash[:notice] = "Movie '#{@movie.title}' deleted."
    redirect_to movies_path
  end

end
